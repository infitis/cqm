/*---------------------------------------------------------------------------
    Copyright (c) 2002-2004 Пиленков  Олег Григорьевич,
                            Невойса   Эрик Григорьевич,
                            Глузман   Владимир Иосифович,
                            Цехмистро Станислав Сергеевич,
                            Кеба      Руслан Анатольевич.

    ЯДРО ПРОГРАММНЫХ СРЕДСТВ
    КОМПЛЕКСА МОНИТОРИНГА КАЧЕСТВА УГЛЕЙ

    Файл: cqmvagon_cn.h

    Описание класса CqmVagonCurNext, который реализует анализ загрузки угля
    в вагоны с помощью перекидного или делительного шибера

---------------------------------------------------------------------------*/

//---------------------------------------------------------------------------
#ifndef cqmvagonscurnextH
#define cqmvagonscurnextH

//---------------------------------------------------------------------------
#include <iostream.h>
#include <time.h>

//---------------------------------------------------------------------------
#include "cqmvagon.h"

//---------------------------------------------------------------------------
class CqmVagonCurNext : public CqmVagon
{
public:
    CqmVagonCurNext(void);
    ~CqmVagonCurNext(void);

    char name_f1[MAX_NAME_LEN];//wing 1 (cur)
    char name_f2[MAX_NAME_LEN];//wing 2 (next)

    int id2;//уникальный идентификатор вагона2

    CoalHeap h2;//куча с углём
    double np;//количество интервалов с нормальным весом для всего вагона
    double vnp;//количество интервалов с нормальным весом для вагона в текущей минуте
    double np2;//количество интервалов с нормальным весом для всего вагона
    double vnp2;//количество интервалов с нормальным весом для вагона в текущей минуте
    double F2;//текущая (ежеминутно) сумма частоты нагрузки вагона
    double lnFp2;//логарифм средней частоты нагрузки вагона

    int svnp;//сумма vnp + vnp2 для всеё минуты

    int w2_after_eov;//признак, что при кв крыло 2 было опущено

    void Start(void);

    void Make(void);

    istream& Input(istream& s);     //get data from istream
    ostream& Print(ostream& s);     //print to ostream

protected:
    void StoreVagon(void);
    void OnPressEov(void);
    int  AddVagon(void);
};

//---------------------------------------------------------------------------
extern ostream& operator<< (ostream& s, CqmVagonCurNext& p);
extern istream& operator>> (istream& s, CqmVagonCurNext& p);

//---------------------------------------------------------------------------
#endif
